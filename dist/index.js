(()=>{"use strict";function e(e){var t,n;switch(e){case"GITHUB_TOKEN":try{t=Deno.env.get(e)}catch(e){t=GITHUB_TOKEN}break;case"GITHUB_MAIN_REPO":try{1==(t=(n=Deno.env.get(e)).split(", ")).length&&(t=n.split(","))}catch(e){1==(t=(n=GITHUB_MAIN_REPO).split(", ")).length&&(t=n.split(","))}break;case"GITHUB_SUB_REPO":try{1==(t=(n=Deno.env.get(e)).split(", ")).length&&(t=n.split(","))}catch(e){1==(t=(n=GITHUB_SUB_REPO).split(", ")).length&&(t=n.split(","))}break;case"GITHUB_CONFIG_NAME":try{t=Deno.env.get(e)}catch(e){t=GITHUB_CONFIG_NAME}break;default:t=Deno.env.get(e)}return t}async function t(e,t){var n=e.username,r=e.repo,a=e.token,o=e.filename,s=e.branch;if(!a||!o||!s)return console.error("[Error] Please Check the Config. (token/filename/branch)"),!1;if(!t)return console.error("[Error] Please Check the key."),!1;let i=encodeURI(`https://api.github.com/repos/${n}/${r}/commits?sha=${s}&dt=${Math.floor(1e8*Math.random())}`),c=await fetch(i,{headers:{Accept:"application/vnd.github.v3.raw",Authorization:`token ${a}`,"User-Agent":"ghKV Clinet"}}),h=await c.json();h=h[0].sha;let u=encodeURI(`https://raw.githubusercontent.com/${n}/${r}/${h}${o}?dt=${Math.floor(1e8*Math.random())}`);console.log(u);let l=await fetch(u,{headers:{Accept:"application/vnd.github.v3.raw",Authorization:`token ${a}`}}),p=await l.text();return console.log(p),p=JSON.parse(p),1==t?p:p[t]}const n="function"==typeof btoa,r="function"==typeof Buffer,a=("function"==typeof TextDecoder&&new TextDecoder,"function"==typeof TextEncoder?new TextEncoder:void 0),o=Array.prototype.slice.call("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="),s=((e=>{let t={};e.forEach(((e,n)=>t[e]=n))})(o),String.fromCharCode.bind(String)),i=("function"==typeof Uint8Array.from&&Uint8Array.from.bind(Uint8Array),e=>e.replace(/=/g,"").replace(/[+\/]/g,(e=>"+"==e?"-":"_"))),c=n?e=>btoa(e):r?e=>Buffer.from(e,"binary").toString("base64"):e=>{let t,n,r,a,s="";const i=e.length%3;for(let i=0;i<e.length;){if((n=e.charCodeAt(i++))>255||(r=e.charCodeAt(i++))>255||(a=e.charCodeAt(i++))>255)throw new TypeError("invalid character found");t=n<<16|r<<8|a,s+=o[t>>18&63]+o[t>>12&63]+o[t>>6&63]+o[63&t]}return i?s.slice(0,i-3)+"===".substring(i):s},h=r?e=>Buffer.from(e).toString("base64"):e=>{let t=[];for(let n=0,r=e.length;n<r;n+=4096)t.push(s.apply(null,e.subarray(n,n+4096)));return c(t.join(""))},u=e=>{if(e.length<2)return(t=e.charCodeAt(0))<128?e:t<2048?s(192|t>>>6)+s(128|63&t):s(224|t>>>12&15)+s(128|t>>>6&63)+s(128|63&t);var t=65536+1024*(e.charCodeAt(0)-55296)+(e.charCodeAt(1)-56320);return s(240|t>>>18&7)+s(128|t>>>12&63)+s(128|t>>>6&63)+s(128|63&t)},l=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,p=r?e=>Buffer.from(e,"utf8").toString("base64"):a?e=>h(a.encode(e)):e=>c(e.replace(l,u)),f=(e,t=!1)=>t?i(p(e)):p(e);function g(e,t,n){return new Response(JSON.stringify({statusCode:e,statusInfo:t}),{headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"},status:n||200})}addEventListener("fetch",(n=>{n.respondWith(async function(n){const r=n.url,a=new URL(r),o=(a.hostname,a.pathname),s=e("GITHUB_TOKEN"),i=e("GITHUB_MAIN_REPO")[0],c=e("GITHUB_MAIN_REPO")[1],h=e("GITHUB_SUB_REPO")[0],u=e("GITHUB_SUB_REPO")[1],l=e("GITHUB_CONFIG_NAME"),p={username:h.split("/")[0],repo:h.split("/")[1],token:s,filename:l,branch:u};if(o.startsWith("/api/reg")){if(await t(p,"user"))return g("403","已有注册账号，如需注册，请删除已有账号重试。");var d=await n.text();return d=JSON.parse(d),/^[a-z0-9_-]{3,15}$/.test(d.username)?await async function(e,n,r,a){var o=e.username,s=e.repo,i=e.token,c=e.filename,h=e.branch;let u=await fetch(`https://api.github.com/repos/${o}/${s}/contents/${c}?ref=${h}`,{method:"GET",headers:{"content-type":"application/json;charset=UTF-8","user-agent":"ghKV Client",Authorization:"token "+i}}),l=(await u.json()).sha;var p;(p=await t(e,!0)).user=r,p=JSON.stringify(p);let g={body:JSON.stringify({branch:h,message:"Upload Database by ghKV.",content:f(p),sha:l}),method:"PUT",headers:{accept:"application/vnd.github.v3+json","content-type":"application/json;charset=UTF-8","user-agent":"ghKV Client",Authorization:"token "+i}},d=await fetch(`https://api.github.com/repos/${o}/${s}/contents${c}?ref=${h}`,g);return 200==d.status||201==d.status}(p,0,[{username:d.username,password:d.password}])?g("200","注册成功。"):g("500","注册失败。"):g("403","用户名或密码不符合要求。")}return new Response(JSON.stringify({main:i,mainbranch:c,sub:h,subbranch:u,config:l}))}(n.request))}))})();